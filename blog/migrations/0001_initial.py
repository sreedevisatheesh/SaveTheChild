# Generated by Django 3.1.4 on 2021-11-12 08:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StudentName', models.CharField(default='', max_length=50, verbose_name='Student Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ImageField(blank=True, default='testing.jpeg', upload_to='thumbnail', verbose_name='Upload Student Progress Report')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Timestamp')),
            ],
            options={
                'verbose_name': 'newsletter',
                'verbose_name_plural': 'newsletters',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StudentName', models.CharField(max_length=100, verbose_name='Student Name')),
                ('StudentDOB', models.DateField(default=django.utils.timezone.now, verbose_name='Student Date of Birth')),
                ('StudentAddress', models.TextField(max_length=300, verbose_name='Student Address')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Timestamp')),
                ('StudentAadhar', models.IntegerField(max_length=12, verbose_name='Student Aadhar Number')),
                ('School', models.TextField(max_length=100, verbose_name=' Class and School Name')),
                ('SchoolAddress', models.TextField(max_length=300, verbose_name='Enter School Address')),
                ('Score', models.IntegerField(max_length=3, verbose_name='Score Of Previous Year out of 100')),
                ('FatherName', models.CharField(max_length=100, verbose_name='Father Name')),
                ('MotherName', models.CharField(max_length=100, verbose_name='Mother Name')),
                ('GuardianPhoneNo', models.IntegerField(max_length=10, verbose_name='Guardian Phone Number')),
                ('ParentOccupation', models.CharField(default='', max_length=100, verbose_name='Parent/Guardian Occupation')),
                ('ParentSalary', models.IntegerField(default=0, max_length=100, verbose_name='Parent/Guardian Salary per annum')),
                ('BPL', models.TextField(max_length=12, verbose_name='Enter BPL card number')),
                ('Total', models.IntegerField(verbose_name='Enter the total estimated amount')),
                ('BankDetails', models.TextField(verbose_name='Enter the bank details of school(Account Number,IFSC code,Branch)')),
                ('featured', models.BooleanField(default=False, verbose_name='Update if Sponsored')),
                ('thumbnail', models.ImageField(blank=True, default='testing.jpeg', upload_to='thumbnail', verbose_name='Upload Student Image')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Slug')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.author', verbose_name='Author')),
                ('category', models.ManyToManyField(related_name='post', to='blog.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
    ]
